#!/bin/bash

# Script ƒë·ªÉ ch·∫°y training v·ªõi multi-GPU cho t·∫•t c·∫£ c√°c config
# T√°c gi·∫£: Training Script
# C√°ch s·ª≠ d·ª•ng: bash train_multi_gpu.sh [config_name]
# V√≠ d·ª•: bash train_multi_gpu.sh dinov2_vitb14
# Ho·∫∑c: bash train_multi_gpu.sh all (ƒë·ªÉ ch·∫°y t·∫•t c·∫£ config)

echo "üöÄ Kh·ªüi ƒë·ªông training v·ªõi Multi-GPU..."

# Ki·ªÉm tra s·ªë l∆∞·ª£ng GPU
GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits | head -1)
echo "üîç Ph√°t hi·ªán $GPU_COUNT GPU(s)"

# Danh s√°ch t·∫•t c·∫£ config
CONFIGS=("dinov2_vitb14" "dinov2_vitl14" "dinov2_vits14" "ent-vit")

# H√†m ch·∫°y training cho m·ªôt config
run_training() {
    local config_name=$1
    local config_file="configs/${config_name}.yaml"
    
    if [ ! -f "$config_file" ]; then
        echo "‚ùå Config file $config_file kh√¥ng t·ªìn t·∫°i!"
        return 1
    fi
    
    echo "üèÉ Ch·∫°y training v·ªõi config: $config_name"
    echo "üìÅ Config file: $config_file"
    
    if [ $GPU_COUNT -ge 2 ]; then
        echo "‚úÖ S·ª≠ d·ª•ng Multi-GPU training v·ªõi $GPU_COUNT GPU(s)"
        export CUDA_VISIBLE_DEVICES=0,1
    else
        echo "‚ö†Ô∏è Ch·ªâ c√≥ $GPU_COUNT GPU, s·ª≠ d·ª•ng single GPU training"
        export CUDA_VISIBLE_DEVICES=0
    fi
    
    # Ch·∫°y training
    python train.py --config "$config_file"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Training ho√†n th√†nh cho config: $config_name"
    else
        echo "‚ùå Training th·∫•t b·∫°i cho config: $config_name"
        return 1
    fi
}

# X·ª≠ l√Ω tham s·ªë d√≤ng l·ªánh
if [ $# -eq 0 ]; then
    echo "üìã Ch·ªçn config ƒë·ªÉ ch·∫°y:"
    echo "1. dinov2_vitb14"
    echo "2. dinov2_vitl14" 
    echo "3. dinov2_vits14"
    echo "4. ent-vit"
    echo "5. all (ch·∫°y t·∫•t c·∫£)"
    echo ""
    read -p "Nh·∫≠p l·ª±a ch·ªçn (1-5): " choice
    
    case $choice in
        1) run_training "dinov2_vitb14" ;;
        2) run_training "dinov2_vitl14" ;;
        3) run_training "dinov2_vits14" ;;
        4) run_training "ent-vit" ;;
        5) 
            echo "üöÄ Ch·∫°y t·∫•t c·∫£ config..."
            for config in "${CONFIGS[@]}"; do
                echo "=================="
                run_training "$config"
                echo "=================="
                sleep 2
            done
            ;;
        *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!" ;;
    esac
elif [ "$1" = "all" ]; then
    echo "üöÄ Ch·∫°y t·∫•t c·∫£ config..."
    for config in "${CONFIGS[@]}"; do
        echo "=================="
        run_training "$config"
        echo "=================="
        sleep 2
    done
else
    # Ch·∫°y config c·ª• th·ªÉ
    run_training "$1"
fi

echo "üéâ Ho√†n th√†nh t·∫•t c·∫£ training!"
